openapi: 3.0.1
info:
  version: 1.0.0
  title: MDDF-API
  description: "API for sending and delivering MDDF metadata and Avails"
  termsOfService: ''
  contact:
    name: "MovieLabs"
    url: "https://movielabs.com/md/"
  license:
    name: Apache 2.0
servers:
  - url: http://mddf.mlmap.com/mddf/v1
  - url: http://localhost:4020/mddf/v1
tags:
  - name: MEC Operations
    description: "Retrieve Media Entertainment Core metadata"
  - name: MMC Operations
    description: "Retrieve Media Manifest Core metadata"
  - name: Avails Operations
    description: "Add, remove and retrieve avails information for a given resource"
  - name: Ancillary Operations
    description: "Additional API's useful in development - likely removed in final version"
paths:
  '/mec/{contentId}':
    get:
      tags:
        - MEC Operations
      description: "Returns an MEC resource to the requester"
      operationId: mecGetResource
      parameters:
        - $ref: '#/components/parameters/mecContentId'
      responses:
        '200':
          description: "Successful"
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/mecResource"
        '404':
          description: "Failed: Resource not found"
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/error"
    post:
      tags:
        - MEC Operations
      description: "Given valid CoreMetadata the resources server will create a new resource associated with this endpoint  "
      operationId: mecPostResource
      parameters:
        - $ref: "#/components/parameters/mecContentId"
      requestBody:
        description: 'MEC request body'
        required: true
        content:
          application/xml:
            schema:
              type: string
            example: '<?xml version="1.0" encoding="UTF-8"?>'
      responses:
        '201':
          description: "Successful"
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/error"
        '209':
          description: "Resource already exists"
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/error"
    put:
      tags:
        - MEC Operations
      description: "Given valid CoreMetadata the resources server will update a resource associated with this endpoint  "
      operationId: mecPutResource
      parameters:
        - $ref: "#/components/parameters/mecContentId"
      requestBody:
        description: 'MEC request body'
        required: true
        content:
          application/xml:
            schema:
              type: string
            example: '<?xml version="1.0" encoding="UTF-8"?>'
      responses:
        '200':
          description: "Successful"
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/successResponse"
        '404':
          description: "Failed: Resource not found"
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/error"
    delete:
      tags:
        - MEC Operations
      description: "Given valid CoreMetadata the resources server will update a resource associated with this endpoint"
      operationId: mecDeleteResource
      parameters:
        - $ref: "#/components/parameters/mecContentId"
      responses:
        '200':
          description: "Successful"
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/successResponse"
        '204':
          description: "No Content"
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/error"
  '/mec/getcount':
    get:
      tags:
        - MEC Operations
      description: "Returns the total number of MEC resources available"
      operationId: mecGetCount
      responses:
        '200':
          description: "Total number of MEC resources"
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/resourceCount"
            application/json:
              schema:
                $ref: "#/components/schemas/resourceCount"

  '/mmc/{contentId}':
    get:
      tags:
        - MMC Operations
      description: "Returns an Media Manifest for the selected resource to the requester"
      operationId: mmcGetResource
      parameters:
        - $ref: '#/components/parameters/mmcContentId'
      responses:
        '200':
          description: "Successful"
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/mmcResource"
        '404':
          description: "Failed: Resource not found"
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/error"
    post:
      tags:
        - MMC Operations
      description: "Given a valid Media Manifest the resources server will create a new resource with this contentId"
      operationId: mmcPostResource
      parameters:
        - $ref: "#/components/parameters/mmcContentId"
      requestBody:
        description: 'MEC request body'
        required: true
        content:
          application/xml:
            schema:
              type: string
            example: '<?xml version="1.0" encoding="UTF-8"?>'
      responses:
        '201':
          description: "Successful"
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/error"
        '209':
          description: "Resource already exists"
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/error"
    put:
      tags:
        - MMC Operations
      description: "Given a valid Media Manifest the resources server will update a resource associated with this endpoint  "
      operationId: mmcPutResource
      parameters:
        - $ref: "#/components/parameters/mmcContentId"
      requestBody:
        description: 'Media Manifest request body'
        required: true
        content:
          application/xml:
            schema:
              type: string
            example: '<?xml version="1.0" encoding="UTF-8"?>'
      responses:
        '200':
          description: "Successful"
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/successResponse"
        '404':
          description: "Failed: Resource not found"
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/error"
    delete:
      tags:
        - MMC Operations
      description: "Will permanently delete the Media Manifest with the contentId"
      operationId: mmcDeleteResource
      parameters:
        - $ref: "#/components/parameters/mmcContentId"
      responses:
        '200':
          description: "Successful"
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/successResponse"
        '204':
          description: "No Content"
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/error"
  '/mmc/getcount':
    get:
      tags:
        - MMC Operations
      description: "Returns the total number of Media Manifest resources available"
      operationId: mmcGetCount
      responses:
        '200':
          description: "Total number of MMC resources"
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/resourceCount"
            application/json:
              schema:
                $ref: "#/components/schemas/resourceCount"

  '/artwork/{resourceId}':
    get:
      tags:
        - Ancillary Operations
      description: "Returns an Artwork resource to the requester"
      operationId: artworkGetResource
      parameters:
        - name: "resourceId"
          description: "An identifier that uniquely identifies the desired artwork resource"
          example: "md:imageid:org:number.hbo.com:787232:season-photo.de"
          in: path
          required: true
          schema:
            type: string
        - name: "width"
          description: "The width of the requested image"
          example: "200"
          in: query
          required: false
          schema:
            type: integer
        - name: "height"
          description: "The height of the requested image"
          example: "200"
          in: query
          required: false
          schema:
            type: integer
        - name: "language"
          description: "The language used in the artwork"
          example: "en"
          in: query
          required: false
          schema:
            type: string
        - name: "country"
          description: "The country where the artwork was used"
          example: "US"
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: "Successful"
          content:
            image/png:
              schema:
                $ref: "#/components/schemas/mecResource"
        '404':
          description: "Failed: Resource not found"
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/error"

  '/mecmap/{contentId}':
    get:
      tags:
        - Ancillary Operations
      description: "If the content is not found, will also look for child works of the id"
      operationId: mecMapResource
      parameters:
        - $ref: '#/components/parameters/mecContentId'
      responses:
        '200':
          description: "Successful"
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/mecResource"
        '404':
          description: "Failed: Resource not found"
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/error"
  '/search':
    get:
      tags:
        - Ancillary Operations
      description: "Conduct a fuzzy search of titles, by name, in the MEC route"
      operationId: searchTitles
      parameters:
        - name: "searchQuery"
          description: "String to fuzzy match to the titles in the MEC helpers"
          example: "mission"
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: "Successful"
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/search"
            application/json:
              schema:
                $ref: "#/components/schemas/search"
        '404':
          description: "Failed: Resource not found"
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/error"
components:
  parameters:
    mecContentId:
      name: "contentId"
      description: "An identifier that uniquely identifies the desired resource"
      example: "md:cid:org:number.hbo.com:787232"
      in: path
      required: true
      schema:
        type: string

    mmcContentId:
      name: "contentId"
      description: "An identifier that uniquely identifies the desired resource"
      example: "md:cid:eidr-s:AD07-310C-C59D-6785-C63A-G"
      in: path
      required: true
      schema:
        type: string


  requestBodies:
    mecResource:
      description: 'Resource request body'
      required: true
      content:
        application/xml:
          schema:
            type: string
          example: "<?xml version=\"1.0\" encoding=\"UTF-8\"?>"

  schemas:
    mecResource:
      type: string
      example: "<?xml version=\"1.0\" encoding=\"UTF-8\"?>"

    mmcResource:
      type: string
      example: "<?xml version=\"1.0\" encoding=\"UTF-8\"?>"

    resourceCount:
      type: object
      properties:
        count:
          type: integer
          description: 'The total number of resources of this type'
          xml:
            name: "Count"
        resourceType:
          type: string
          description: 'The type of resource to which the count applies'
          xml:
            name: "ResourceType"
      xml:
        name: "Response"

    successResponse:
      type: object
      properties:
        responseCode:
          type: number
          description: 'A numeric code indicating the type of response'
          xml:
            name: "ResponseCode"
        message:
          type: string
          description: 'A written description of the action taken by the API'
          xml:
            name: "Message"
        resource:
          type: string
          description: 'The resource URL responsible for the response'
          xml:
            name: "Resource"
        moreInfo:
          type: string
          description: 'Additional information that may provide value to the client (optional)'
          xml:
            name: "MoreInfo"
        ref:
          type: string
          description: 'A transaction reference for referencing logs or status updates (optional)'
          xml:
            name: "Ref"
      xml:
        name: "Response"

    error:
      type: object
      properties:
        errorCode:
          type: number
          description: 'A numeric error code associated with the error'
          xml:
            name: "ErrorCode"
        message:
          type: string
          description: 'A written description of the error encountered'
          xml:
            name: "Message"
        resource:
          type: string
          description: 'The resource URL causing the error'
          xml:
            name: "Resource"
        moreInfo:
          type: string
          description: 'Additional information that may provide value to the client (optional)'
          xml:
            name: "MoreInfo"
        ref:
          type: string
          description: 'A transaction reference for referencing logs or status updates (optional)'
          xml:
            name: "Ref"
      xml:
        name: "Error"

    search:
      type: object
      properties:
        score:
          type: number
          description: 'A score based on the closeness of the title name to the search request'
          xml:
            name: "Score"
        name:
          type: string
          description: 'The name of the creative work'
          xml:
            name: "Name"
        contentId:
          type: string
          description: 'The full id for the creative work, this can be used to request the asset'
          xml:
            name: "ContentId"
        type:
          type: string
          description: 'The referent type of the creative work'
          xml:
            name: "Type"
        fileName:
          type: string
          description: 'The filename backing the resource'
          xml:
            name: "FileName"
        parentEidr:
          type: string
          description: 'The EIDR id for the parent asset of this creative work (optional)'
          xml:
            name: "ParentEIDR"






